{"description": "This course is held at the second semester of the first year of the Master of Computer Engineering, and it is organized in two parts. The first part introduces the architecture and the design principles of an operating system. More specifically, it deals with internal operating system modules, together with the main techniques and strategies for efficient management of resources such as processors, memories, peripheral devices, files, etc. The second part describes programming interfaces for system programming and resource management, as well as concurrent programming. It introduces system programming techniques, within the framework of state-of-the-art operating systems, such as Unix/Linux and Windows. Advances concurrend programming techniques are introduced and used.", "prerequisites": "Knowledge of a computer system architecture, with a specific emphasys on the structure of the CPU and memory subsystem.\nKnowledge of the interrupt mechanism and basics of an assembly language.\nKnowledge of the foundations of data structures and algorithms.\nGood programming skill in C language.\nKnowledge of base concurrent programming techniques.", "topics": "Review of operating system architecture (3.0 hours)\n\u0009\u2022 Modules for the management of the resources of a computer system\n\u0009\u2022 Process and thread management synchronization (recalls)\n\nMemory management (10.0 hours)\n\u0009\u2022 Physical and logical address spaces, MMU, TLB\n\u0009\u2022 Paging\n\u0009\u2022 Virtual memory and demand paging\n\nPeripheral Device management (3.0 hours)\n\u0009\u2022 Drivers and IO device management\n\u0009\u2022 Disk management\n\nFile system management (6.0 hours)\n\u0009\u2022 File system organization and protection\n\u0009\u2022 Management an operations on files and directories\n\nTeaching operating system OS161 (10.0 hours)\n\u0009\u2022 System level architecture, source files, compilation, execution, debug\n\u0009\u2022 Implementation of simple system calls for standard I/O\n\u0009\u2022 Thread and user process management\n\u0009\u2022 Implementation of synchronization primitives\n\u0009\u2022 Implementation of simple support for file I/O"}
